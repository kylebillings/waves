{"version":3,"sources":["WaveformGenerator.js"],"names":["WaveformGenerator","audioBuffer","settingsObject","guid","Math","floor","random","toString","substring","drawBar","index","height","width","settings","bar","gap","abs","x","y","waveform","path","document","createElement","align","setAttribute","className","svg","id","appendChild","bufferMeasure","position","length","data","sum","i","ref","pow","sqrt","extractBuffer","buffer","getChannelData","sections","len","maxHeight","vals","push","scale","max","apply","j","val","fileArrayBuffer","Object","assign","setAttributeNS","svgStyleSheet","createTextNode","color","Promise","resolve","reject","audioContext","decodeAudioData","outerHTML","AudioContext","WebkitAudioContext"],"mappings":"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","file":"WaveformGenerator.js","sourcesContent":["var WaveformGenerator = (function(audioBuffer, settingsObject) {\r\n    var settings = {\r\n        waveform: {\r\n            width: 500,\r\n            height: 80,\r\n            color: '#bada55'\r\n        },\r\n        bar: {\r\n            align: 'center',\r\n            width: 1,\r\n            gap: 0\r\n        }\r\n    };\r\n\r\n    var audioContext = new AudioContext() || new WebkitAudioContext();\r\n    var svg = null;\r\n    var svgStyleSheet = null;\r\n\r\n    function guid() {\r\n      return 'a' + Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1) + 'b' + Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n    }\r\n    \r\n    function drawBar(index, height) {\r\n        var width = settings.bar.width;\r\n        if (settings.bar.gap !== 0) {\r\n            width *= Math.abs(100 - settings.bar.gap) / 100;\r\n        }\r\n        var x = index + (width / 2),\r\n            y = settings.waveform.height / 2 - height / 2,\r\n            path = document.createElement('path');\r\n        switch (settings.bar.align) {\r\n            case 'top':\r\n                y = 0;\r\n                break;\r\n            case 'center':\r\n                y = settings.waveform.height / 2 - height / 2;\r\n                break;\r\n            case 'bottom':\r\n                y = settings.waveform.height - height;\r\n        }\r\n        path.setAttribute('d', 'M' + x + ' ' + y + ' L' + x + ' ' + y + ' L' + x + ' ' + (y + height) + ' L' + x + ' ' + (y + height) + ' L' + x + ' ' + y + ' Z');\r\n        path.className = svg.id;\r\n        svg.appendChild(path);\r\n    }\r\n\r\n    function bufferMeasure(position, length, data) {\r\n        var sum = 0.0;\r\n        for (var i = position, ref = (position + length) - 1; position <= ref ? i <= ref : i >= ref; position <= ref ? i++ : i--) {\r\n            sum += Math.pow(data[i], 2);\r\n        }\r\n        return Math.sqrt(sum / data.length);\r\n    }\r\n\r\n    function extractBuffer(buffer) {\r\n        buffer = buffer.getChannelData(0);\r\n        var sections = settings.waveform.width;\r\n        var len = Math.floor(buffer.length / sections);\r\n        var maxHeight = settings.waveform.height;\r\n        var vals = [];\r\n        for (var i = 0; i < sections; i += settings.bar.width) {\r\n            vals.push(bufferMeasure(i * len, len, buffer) * 10000);\r\n        }\r\n        var scale = maxHeight / Math.max.apply(null, vals);\r\n        for (var j = 0; j < sections; j += settings.bar.width) {\r\n            var val = bufferMeasure(j * len, len, buffer) * 10000;\r\n            val *= scale;\r\n            val += 1;\r\n            drawBar(j, val);\r\n        }\r\n        if (i >= sections) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    // Constructor\r\n    function WaveformGenerator(fileArrayBuffer, settingsObject) {\r\n      // Merge objects\r\n      Object.assign(settings, settingsObject);\r\n\r\n      svg = document.createElement('svg');\r\n      svg.id = guid();\r\n      svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\r\n      svg.setAttribute('version', '1.1');\r\n      svg.setAttributeNS(null, 'viewBox', '0 0 ' + settings.waveform.width + ' ' + settings.waveform.height);\r\n\r\n      svgStyleSheet = document.createElement('style');\r\n      svgStyleSheet.setAttribute('type', 'text/css');\r\n      svgStyleSheet.appendChild(document.createTextNode('<![CDATA[path.'+svg.id+'{stroke:' + settings.waveform.color + ';stroke-width:' + ((settings.bar.width !== 0) ? (settings.bar.width * Math.abs(1 - settings.bar.gap)) : settings.bar.width) + '}]]>'));\r\n\r\n      svg.appendChild(svgStyleSheet);\r\n\r\n      return new Promise(function(resolve, reject) {\r\n        audioContext.decodeAudioData(fileArrayBuffer, function(audioBuffer) {\r\n          if (extractBuffer(audioBuffer)) {\r\n            resolve(svg.outerHTML);\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    return WaveformGenerator;\r\n})();"],"sourceRoot":"/source/"}